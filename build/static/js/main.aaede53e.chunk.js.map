{"version":3,"sources":["context/CRMContext.js","componentes/layout/Header.js","componentes/layout/Navegacion.js","config/axios.js","componentes/clientes/Cliente.js","componentes/layout/Spinner.js","componentes/clientes/Clientes.js","componentes/clientes/NuevoCliente.js","componentes/clientes/EditarCliente.js","componentes/productos/Producto.js","componentes/productos/Productos.js","componentes/productos/EditarProducto.js","componentes/productos/NuevoProducto.js","componentes/pedidos/DetallesPedido.js","componentes/pedidos/Pedidos.js","componentes/pedidos/FormBuscarProducto.js","componentes/pedidos/FormCantidadProducto.js","componentes/pedidos/NuevoPedido.js","componentes/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["CRMContext","React","createContext","CRMProvider","props","_useState","useState","token","auth","_useState2","Object","slicedToArray","guardarAuth","react_default","a","createElement","Provider","value","children","withRouter","_useContext","useContext","_useContext2","className","localStorage","getItem","type","onClick","setItem","history","push","Navegacion","react_router_dom","to","clienteAxios","axios","create","baseURL","process","Cliente","_ref","cliente","_id","nombre","apellido","empresa","email","telefono","concat","idCliente","Swal","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","delete","res","data","mensaje","Spinner","clientes","guardarClientes","useEffect","asyncToGenerator","regenerator_default","mark","_callee","clientesConsulta","wrap","_context","prev","next","get","sent","t0","response","status","stop","apply","this","arguments","consultarAPI","length","react","map","clientes_Cliente","key","layout_Spinner","guardarCliente","actualizarState","e","objectSpread","defineProperty","target","name","onSubmit","preventDefault","post","code","placeholder","onChange","disabled","validarCliente","id","match","params","datosCliente","clienteConsulta","put","Producto","producto","precio","imagen","src","alt","Productos","productos","guardarProductos","productosConsulta","headers","Authorization","productos_Producto","guardarProducto","_useState3","_useState4","archivo","guardarArchivo","productoConsulta","editarProducto","_ref2","_callee2","formData","_context2","FormData","append","Content-Type","console","log","_x","leerInformacionProducto","defaultValue","min","step","width","files","agregarProducto","DetallesPedido","pedido","eliminarPedido","articulos","cantidad","total","Pedidos","pedidos","guardarPedidos","resultado","todosPedidos","filter","pedidos_DetallesPedido","FormBuscarProducto","buscarProducto","leerDatosBusqueda","FormCantidadProducto","restarProductos","aumentarProductos","eliminarProductoPedido","index","busqueda","guardarBusqueda","_useState5","_useState6","_useState7","_useState8","guardarTotal","actualizarTotal","resultadoBusqueda","productoResultado","toConsumableArray","i","todosProductos","nuevoTotal","realizarPedido","_ref3","_callee3","_context3","_x2","pedidos_FormBuscarProducto","pedidos_FormCantidadProducto","credenciales","guardarCredenciales","iniciarSesion","respuesta","leerDatos","required","App","CRMContext_CRMProvider","layout_Header","layout_Navegacion","react_router","exact","path","component","Clientes","NuevoCliente","EditarCliente","NuevoProducto","EditarProducto","NuevoPedido","Login","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aaede53e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst CRMContext = React.createContext([ {}, () => {} ]);\n\nconst CRMProvider = props => {\n\n    // definir el state inicial\n    const [auth, guardarAuth ] = useState({\n        token: '',\n        auth: false\n    });\n\n    return (\n        <CRMContext.Provider value={[auth, guardarAuth]}>\n            {props.children}\n        </CRMContext.Provider> \n    );\n}\n\nexport { CRMContext, CRMProvider };","import React, {useContext} from 'react';\n\nimport { CRMContext } from '../../context/CRMContext';\nimport {withRouter} from 'react-router-dom';\n\nconst Header = (props) => {\n\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n    const cerrarSesion = () => {\n        // auth.auth = false y el token se remueve\n        guardarAuth({\n            token: '',\n            auth: false\n        });\n\n        localStorage.setItem('token', '');\n\n        // redireccionar\n        props.history.push('/iniciar-sesion');\n    }\n\n    return (\n        <header className=\"barra\">\n            <div className=\"contenedor\">\n                <div className=\"contenido-barra\">\n                    <h1>CRM - Administrador de Clientes</h1>\n\n\n                    { localStorage.getItem('token') ? (\n                        <button \n                            type=\"button\"\n                            className=\"btn btn-rojo\"\n                            onClick={cerrarSesion}\n                        >\n                            <i className=\"far fa-times-circle\"></i>\n                            Cerrar Sesión\n                        </button>\n                    ) : null }\n                    \n                \n                </div>\n                \n            </div>\n        </header>\n    )\n\n}\n\nexport default withRouter(Header);","import React, { useContext } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { CRMContext } from '../../context/CRMContext';\n\nconst Navegacion = () => {\n\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n    if(!localStorage.getItem('token')) return null;\n\n    return ( \n        <aside className=\"sidebar col-3\">\n            <h2>Administración</h2>\n\n            <nav className=\"navegacion\">\n                <Link to={\"/\"} className=\"clientes\">Clientes</Link>\n                <Link to={\"/productos\"} className=\"productos\">Productos</Link>\n                <Link to={\"/pedidos\"} className=\"pedidos\">Pedidos</Link>\n            </nav>\n        </aside>\n\n     );\n}\n \nexport default Navegacion;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport clienteAxios from '../../config/axios';\n\nfunction Cliente({ cliente }) {\n\t// extraer los valores\n\tconst { _id, nombre, apellido, empresa, email, telefono } = cliente;\n\n\t// Eliminar cliente\n\tconst eliminarCliente = idCliente => {\n\t\tSwal.fire({\n\t\t\ttitle: '¿Estas seguro?',\n\t\t\ttext: \"Un cliente eliminado no se puede recuperar\",\n\t\t\ttype: 'warning',\n\t\t\tshowCancelButton: true,\n\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\tcancelButtonColor: '#d33',\n            confirmButtonText: 'Si, eliminar!',\n            cancelButtonText: 'Cancelar'\n\t\t}).then((result) => {\n\t\t\tif (result.value) {\n                // Llamado a axios\n                clienteAxios.delete(`/clientes/${idCliente}`)\n                    .then(res => {\n                        Swal.fire(  \n                            'Eliminado', \n                            res.data.mensaje, \n                            'success'\n                        );\n                    });\n                    \n\t\t\t}\n\t\t});\n\t};\n\n\treturn (\n\t\t<li className=\"cliente\">\n\t\t\t<div className=\"info-cliente\">\n\t\t\t\t<p className=\"nombre\">\n\t\t\t\t\t{nombre} {apellido}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"empresa\">{empresa}</p>\n\t\t\t\t<p>{email}</p>\n\t\t\t\t<p>Tel: {telefono}</p>\n\t\t\t</div>\n\t\t\t<div className=\"acciones\">\n\t\t\t\t<Link to={`/clientes/editar/${_id}`} className=\"btn btn-azul\">\n\t\t\t\t\t<i className=\"fas fa-pen-alt\" />\n\t\t\t\t\tEditar Cliente\n\t\t\t\t</Link>\n\n\t\t\t\t<Link to={`/pedidos/nuevo/${_id}`} className=\"btn btn-amarillo\">\n\t\t\t\t\t<i className=\"fas fa-plus\" />\n\t\t\t\t\tNuevo Pedido\n\t\t\t\t</Link>\n\n                <button \n                    type=\"button\" \n                    className=\"btn btn-rojo btn-eliminar\" \n                    onClick={() => eliminarCliente(_id)}\n                >\n\t\t\t\t\t<i className=\"fas fa-times\" />\n\t\t\t\t\tEliminar Cliente\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</li>\n\t);\n}\nexport default Cliente;\n","import React from 'react';\nimport './Spinner.css';\n\nfunction Spinner() {\n    return(\n        <div className=\"spinner\">\n            <div className=\"dot1\"></div>\n            <div className=\"dot2\"></div>\n        </div>\n    )\n}\nexport default Spinner;","import React, { useEffect, useState, useContext, Fragment } from 'react';\n\n// importar cliente axios\nimport clienteAxios from '../../config/axios';\nimport Cliente from './Cliente';\nimport Spinner from '../layout/Spinner';\nimport { Link, withRouter } from 'react-router-dom';\n\n// import el Context\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Clientes(props) {\n    // Trabajar con el state\n    // clientes = state,  guardarClientes = funcion para guardar el state\n    const [ clientes, guardarClientes ] = useState([]);\n\n    // utilizar valores del context\n    const [auth, guardarAuth ] = useContext( CRMContext );\n\n    // use effect es similar a componentdidmount y willmount\n    useEffect( () => {\n\n        if(localStorage.getItem('token')) {\n            // Query a la API\n            const consultarAPI = async () => {\n                try {\n                    const clientesConsulta = await clienteAxios.get('/clientes', {\n                        /* headers: {\n                            Authorization : `Bearer ${auth.token}`\n                        } */\n                    });\n    \n                    // colocar el resultado en el state\n                    guardarClientes(clientesConsulta.data);\n\n                } catch (error) {\n                    // Error con authorizacion\n                    if(error.response.status = 500) {\n                        props.history.push('/iniciar-sesion');\n                    }\n                }\n            }\n            consultarAPI();\n        } else {\n            props.history.push('/iniciar-sesion');\n        }\n    }, [clientes] );\n\n\n    // Si el state esta como false\n    if(!localStorage.getItem('token')) {\n        props.history.push('/iniciar-sesion');\n    }\n\n    if(!clientes.length) return <Spinner /> \n\n    \n    return (\n        <Fragment>\n        \n            <h2>Clientes</h2>\n\n            <Link to={\"/clientes/nuevo\"} className=\"btn btn-verde nvo-cliente\"> \n                <i className=\"fas fa-plus-circle\"></i>\n                Nuevo Cliente\n            </Link>\n\n            <ul className=\"listado-clientes\">\n                {clientes.map(cliente => (\n                    <Cliente \n                        key={cliente._id}\n                        cliente={cliente}\n                    />\n                ))}\n            </ul>\n\n        </Fragment>\n    )\n}\nexport default withRouter(Clientes);","import React, {Fragment, useState, useContext} from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom'; \nimport clienteAxios from '../../config/axios';\n\n// import el Context\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction NuevoCliente({history}){\n\n    // utilizar valores del context\n    const [auth, guardarAuth ] = useContext( CRMContext );\n\n    // cliente = state, guardarcliente = funcion para guardar el state\n    const[cliente, guardarCliente] = useState({\n        nombre: '',\n        apellido: '',\n        empresa : '',\n        email: '',\n        telefono :''\n    });\n\n    // leer los datos del formulario\n    const actualizarState = e => {\n        // Almacenar lo que el usuario escribe en el state\n        guardarCliente({\n            // obtener una copia del state actual\n            ...cliente, \n            [e.target.name] : e.target.value\n        })\n\n    }\n\n    // Añade en la REST API un cliente nuevo\n    const agregarCliente = e => {\n        e.preventDefault();\n\n        // enviar petición\n        clienteAxios.post('/clientes', cliente)\n            .then(res => {\n                // validar si hay errores de mongo \n                if(res.data.code === 11000) {\n                    Swal.fire({\n                        type: 'error',\n                        title: 'Hubo un error',\n                        text: 'Ese cliente ya esta registrado'\n                    })\n                } else {\n                    Swal.fire(\n                        'Se agregó el Cliente',\n                        res.data.mensaje,\n                        'success'\n                    )\n                }\n                // Redireccionar\n                history.push('/');\n            });\n    }\n\n    // Validar el formulario\n    const validarCliente = () => {\n        // Destructuring\n        const { nombre, apellido, email, empresa, telefono} = cliente;\n\n        // revisar que las propiedades del state tengan contenido\n        let valido = !nombre.length || !apellido.length || !email.length || !empresa.length || !telefono.length;\n\n        // return true o false\n        return valido;\n    }\n\n    // verificar si el usuario esta autenticado o no\n    if(!auth.auth && (localStorage.getItem('token') === auth.token ) ) {\n        history.push('/iniciar-sesion');\n    }\n\n    return (\n\n\n        <Fragment>\n            <h2>Nuevo Cliente</h2>\n            \n            <form\n                onSubmit={agregarCliente}\n            >\n                <legend>Llena todos los campos</legend>\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input  type=\"text\" \n                            placeholder=\"Nombre Cliente\" \n                            name=\"nombre\"\n                            onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Apellido:</label>\n                    <input type=\"text\" \n                          placeholder=\"Apellido Cliente\" \n                          name=\"apellido\" \n                          onChange={actualizarState}\n                    />\n                </div>\n            \n                <div className=\"campo\">\n                    <label>Empresa:</label>\n                    <input type=\"text\" \n                          placeholder=\"Empresa Cliente\" \n                          name=\"empresa\" \n                          onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Email:</label>\n                    <input type=\"email\" \n                            placeholder=\"Email Cliente\" \n                            name=\"email\" \n                            onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Teléfono:</label>\n                    <input type=\"tel\" \n                        placeholder=\"Teléfono Cliente\" \n                        name=\"telefono\" \n                        onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"enviar\">\n                    <input \n                        type=\"submit\" \n                        className=\"btn btn-azul\" \n                        value=\"Agregar Cliente\" \n                        disabled={ validarCliente() }\n                    />\n                </div>\n            </form>\n        </Fragment>\n    )\n}\n\n// HOC, es una función que toma un componente y retorna un nuevo componente\nexport default  withRouter(NuevoCliente);","import React, {Fragment, useState, useEffect} from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom'; \nimport clienteAxios from '../../config/axios';\n\n\n\nfunction EditarCliente(props){\n\n    // obtener el ID\n    const { id } = props.match.params;\n\n    // cliente = state, datosCliente = funcion para guardar el state\n    const[cliente, datosCliente] = useState({\n        nombre: '',\n        apellido: '',\n        empresa : '',\n        email: '',\n        telefono :''\n    });\n\n    // Query a la API\n    const consultarAPI = async () => {\n        const clienteConsulta = await clienteAxios.get(`/clientes/${id}`);\n\n       // colocar en el state\n       datosCliente(clienteConsulta.data);\n    }\n\n    // useEffect, cuando el componente carga\n    useEffect( () => {\n        consultarAPI();\n    }, []);\n\n    // leer los datos del formulario\n    const actualizarState = e => {\n        // Almacenar lo que el usuario escribe en el state\n        datosCliente({\n            // obtener una copia del state actual\n            ...cliente, \n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Envia una petición por axios para actualizar el cliente\n    const actualizarCliente = e => {\n        e.preventDefault();\n\n        // enviar petición por axios\n        clienteAxios.put(`/clientes/${cliente._id}`, cliente) \n            .then(res => {\n                // validar si hay errores de mongo \n                if(res.data.code === 11000) {\n                    Swal.fire({\n                        type: 'error',\n                        title: 'Hubo un error',\n                        text: 'Ese cliente ya esta registrado'\n                    })\n                } else {\n                    Swal.fire(\n                        'Correcto',\n                        'Se actualizó Correctamente',\n                        'success'\n                    )\n                }\n\n                // redireccionar\n                props.history.push('/');\n            })\n    }\n\n    // Validar el formulario\n    const validarCliente = () => {\n        // Destructuring\n        const { nombre, apellido, email, empresa, telefono} = cliente;\n\n        // revisar que las propiedades del state tengan contenido\n        let valido = !nombre.length || !apellido.length || !email.length || !empresa.length || !telefono.length;\n\n        // return true o false\n        return valido;\n    }\n\n    return (\n        <Fragment>\n            <h2>Editar Cliente</h2>\n            \n            <form\n                onSubmit={actualizarCliente}\n            >\n                <legend>Llena todos los campos</legend>\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input  type=\"text\" \n                            placeholder=\"Nombre Cliente\" \n                            name=\"nombre\"\n                            onChange={actualizarState}\n                            value={cliente.nombre}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Apellido:</label>\n                    <input type=\"text\" \n                          placeholder=\"Apellido Cliente\" \n                          name=\"apellido\" \n                          onChange={actualizarState}\n                          value={cliente.apellido}\n                    />\n                </div>\n            \n                <div className=\"campo\">\n                    <label>Empresa:</label>\n                    <input type=\"text\" \n                          placeholder=\"Empresa Cliente\" \n                          name=\"empresa\" \n                          onChange={actualizarState}\n                          value={cliente.empresa}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Email:</label>\n                    <input type=\"email\" \n                            placeholder=\"Email Cliente\" \n                            name=\"email\" \n                            onChange={actualizarState}\n                            value={cliente.email}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Teléfono:</label>\n                    <input type=\"tel\" \n                        placeholder=\"Teléfono Cliente\" \n                        name=\"telefono\" \n                        onChange={actualizarState}\n                        value={cliente.telefono}\n                    />\n                </div>\n\n                <div className=\"enviar\">\n                    <input \n                        type=\"submit\" \n                        className=\"btn btn-azul\" \n                        value=\"Guardar Cambios\" \n                        disabled={ validarCliente() }\n                    />\n                </div>\n            </form>\n        </Fragment>\n    )\n}\n\n// HOC, es una función que toma un componente y retorna un nuevo componente\nexport default  withRouter(EditarCliente);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport clienteAxios from '../../config/axios';\n\nfunction Producto({producto}) {\n\n\n    // elimina un producto\n    const eliminarProducto = id => {\n        Swal.fire({\n            title: '¿Estás seguro?',\n            text: \"Un producto eliminado no se puede recuperar\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, Eliminar',\n            cancelButtonText : 'No, Cancelar'\n        }).then((result) => {\n            if (result.value) {\n              // eliminar en la rest api\n              clienteAxios.delete(`/productos/${id}`)\n                .then(res => {\n                    if(res.status === 200) {\n                        Swal.fire(\n                            'Eliminado',\n                            res.data.mensaje,\n                            'success'\n                        )\n                    }\n                })\n            }\n        })\n    }\n\n    const {_id, nombre, precio, imagen } = producto;\n\n    return (\n        <li className=\"producto\">\n            <div className=\"info-producto\">\n                <p className=\"nombre\">{nombre}</p>\n                <p className=\"precio\">$ {precio}</p>\n                { imagen ? (\n                    <img src={`${process.env.REACT_APP_BACKEND_URL}/${imagen}`} alt=\"imagen\" />\n                ) : null  }\n            </div>\n            <div className=\"acciones\">\n                <Link to={`/productos/editar/${_id}`} className=\"btn btn-azul\">\n                    <i className=\"fas fa-pen-alt\"></i>\n                    Editar Producto\n                </Link>\n\n                <button \n                    type=\"button\" \n                    className=\"btn btn-rojo btn-eliminar\"\n                    onClick={() => eliminarProducto(_id) }\n                >\n                    <i className=\"fas fa-times\"></i>\n                    Eliminar Producto\n                </button>\n            </div>\n        </li>\n    )\n}\nexport default Producto;","import React, {useEffect, useState, useContext,  Fragment} from 'react';\nimport { Link } from 'react-router-dom';\n// importar cliente axios\nimport clienteAxios from '../../config/axios';\nimport Producto from './Producto';\nimport Spinner from '../layout/Spinner';\n\n// import el Context\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Productos(props) {\n\n    // productos = state, guardarproductos = funcion para guardar el state\n    const [productos, guardarProductos] = useState([]);\n     \n    // utilizar valores del context\n    const [auth, guardarAuth ] = useContext( CRMContext );\n\n    // useEffect para consultar api cuando cargue\n    useEffect( () => {\n\n        //if(auth.token !== '') {\n            // Query a la API\n            const consultarAPI = async () => {\n                try {\n                    const productosConsulta = await clienteAxios.get('/productos', {\n                        headers: {\n                            Authorization : `Bearer ${auth.token}`\n                        }\n                    });\n                    guardarProductos(productosConsulta.data);\n                } catch (error) {\n                    // Error con authorizacion\n                    if(error.response.status = 500) {\n                        props.history.push('/iniciar-sesion');\n                    }\n                }\n            }\n            // llamado a la api\n            consultarAPI();\n\n        /* } else {\n            props.history.push('/iniciar-sesion');\n        } */\n    }, [productos]);\n\n    // Si el state esta como false\n   if(!localStorage.getItem('token')) {\n        props.history.push('/iniciar-sesion');\n    } \n\n\n    // spinner de carga\n    //if(!productos.length) return <Spinner />;\n     \n\n    return (\n        <Fragment>\n            <h2>Productos</h2>\n\n            <Link to={'/productos/nuevo'} className=\"btn btn-verde nvo-cliente\"> \n                <i className=\"fas fa-plus-circle\"></i>\n                Nuevo Producto\n            </Link>\n\n            <ul className=\"listado-productos\">\n                {  !productos.length ? <Spinner /> :  productos.map(producto => (\n                        <Producto \n                            key={producto._id}\n                            producto={producto}                          \n                        />\n                        )    \n                    )\n                }\n            </ul>\n        </Fragment>\n    )\n}\nexport default Productos;","import React, {useState, useEffect, Fragment} from 'react';\nimport Swal from 'sweetalert2';\nimport clienteAxios from '../../config/axios';\nimport { withRouter } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\n\nfunction EditarProductos(props) {\n\n    // obtener el ID\n    const { id } = props.match.params;\n\n    // producto = state, y funcion para actualizar\n    const [ producto, guardarProducto ] = useState({\n        nombre: '',\n        precio: '',\n        imagen : ''\n    });\n\n    // archivo = state, guardarArchivo = setState\n    const [archivo, guardarArchivo] = useState('');\n\n    // cuando el componente carga\n    useEffect(() => {\n         // consultar la api para traer el producto a editar\n        const consultarAPI = async () => {\n            const productoConsulta = await clienteAxios.get(`/productos/${id}`);\n            guardarProducto(productoConsulta.data);\n        }\n\n        consultarAPI();\n    }, [])\n\n    // Edita un Producto en la base de datos\n    const editarProducto = async e => {\n        e.preventDefault();\n\n        // crear un formdata\n        const formData = new FormData();\n        formData.append('nombre', producto.nombre);\n        formData.append('precio', producto.precio);\n        formData.append('imagen', archivo);\n\n        // almacenarlo en la BD\n        try {\n            const res = await clienteAxios.put(`/productos/${id}`, formData, {\n                headers: {\n                    'Content-Type' : 'multipart/form-data'\n                }\n            } );\n\n            // Lanzar una alerta\n            if(res.status === 200) {\n                Swal.fire(\n                    'Editado Correctamente',\n                    res.data.mensaje,\n                    'success'\n                )\n            }\n\n            // redireccionar\n            props.history.push('/productos');\n\n        } catch (error) {\n            console.log(error);\n            // lanzar alerta\n            Swal.fire({\n                type:'error',\n                title: 'Hubo un error',\n                text: 'Vuelva a intentarlo'\n            })\n        }\n    }\n\n    // leer los datos del formulario\n    const leerInformacionProducto = e => {\n        guardarProducto({\n            // obtener una copia del state y agregar el nuevo\n            ...producto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // coloca la imagen en el state\n    const leerArchivo = e => {\n        guardarArchivo( e.target.files[0] );\n    }\n\n    // extraer los valores del state\n    const { nombre, precio, imagen } = producto;\n\n    if(!nombre) return <Spinner />\n\n    return (\n        <Fragment>\n            <h2>Editar Producto</h2>\n\n            <form\n                onSubmit={editarProducto}\n            >\n                <legend>Llena todos los campos</legend>\n\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Nombre Producto\" \n                        name=\"nombre\"\n                        onChange={leerInformacionProducto}\n                        defaultValue={nombre}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Precio:</label>\n                    <input \n                        type=\"number\" \n                        name=\"precio\" \n                        min=\"0.00\" \n                        step=\"0.01\" \n                        placeholder=\"Precio\"\n                        onChange={leerInformacionProducto}\n                        defaultValue={precio}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Imagen:</label>\n                    { imagen ? (\n                        <img src={`${process.env.REACT_APP_BACKEND_URL}/${imagen}`} alt=\"imagen\" width=\"300\" />\n                    ) : null }\n                    <input \n                        type=\"file\"  \n                        name=\"imagen\"\n                        onChange={leerArchivo}\n                    />\n                </div>\n\n                <div className=\"enviar\">\n                        <input type=\"submit\" className=\"btn btn-azul\" value=\"Editar Producto\" />\n                </div>\n            </form>\n        </Fragment>\n    )\n}\nexport default withRouter(EditarProductos);","import React, {useState, Fragment} from 'react';\nimport Swal from 'sweetalert2';\nimport clienteAxios from '../../config/axios';\nimport { withRouter } from 'react-router-dom';\n\nfunction NuevoProducto(props) {\n\n    //producto = state, guardarProducto = setstate\n    const [producto, guardarProducto] = useState({\n        nombre: '',\n        precio: ''\n    });\n    // archivo = state, guardarArchivo = setState\n    const [archivo, guardarArchivo] = useState('');\n\n    // almacena el nuevo producto en la base de datos.\n    const agregarProducto = async e => {\n        e.preventDefault();\n\n        // crear un formdata\n        const formData = new FormData();\n        formData.append('nombre', producto.nombre);\n        formData.append('precio', producto.precio);\n        formData.append('imagen', archivo);\n\n        // almacenarlo en la BD\n        try {\n            const res = await clienteAxios.post('/productos', formData, {\n                headers: {\n                    'Content-Type' : 'multipart/form-data'\n                }\n            } );\n\n            // Lanzar una alerta\n            if(res.status === 200) {\n                Swal.fire(\n                    'Agregado Correctamente',\n                    res.data.mensaje,\n                    'success'\n                )\n            }\n\n            // redireccionar\n            props.history.push('/productos');\n\n        } catch (error) {\n            console.log(error);\n            // lanzar alerta\n            Swal.fire({\n                type:'error',\n                title: 'Hubo un error',\n                text: 'Vuelva a intentarlo'\n            })\n        }\n    }\n\n    // leer los datos del formulario\n    const leerInformacionProducto = e => {\n        guardarProducto({\n            // obtener una copia del state y agregar el nuevo\n            ...producto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // coloca la imagen en el state\n    const leerArchivo = e => {\n        guardarArchivo( e.target.files[0] );\n    }\n\n    return (\n        <Fragment>\n            <h2>Nuevo Producto</h2>\n\n            <form\n                onSubmit={agregarProducto}\n            >\n                <legend>Llena todos los campos</legend>\n\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Nombre Producto\" \n                        name=\"nombre\"\n                        onChange={leerInformacionProducto}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Precio:</label>\n                    <input \n                        type=\"number\" \n                        name=\"precio\" \n                        min=\"0.00\" \n                        step=\"0.01\" \n                        placeholder=\"Precio\"\n                        onChange={leerInformacionProducto}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Imagen:</label>\n                    <input \n                        type=\"file\"  \n                        name=\"imagen\"\n                        onChange={leerArchivo}\n                    />\n                </div>\n\n                <div className=\"enviar\">\n                        <input type=\"submit\" className=\"btn btn-azul\" value=\"Agregar Producto\" />\n                </div>\n            </form>\n        </Fragment>\n    )\n}\nexport default withRouter(NuevoProducto);","import React from 'react';\n\n\nfunction DetallesPedido(props) {\n\n    const {pedido, eliminarPedido} = props;\n    const {cliente} = pedido;\n\n    return(\n        <li className=\"pedido\">\n            <div className=\"info-pedido\">\n                <p className=\"id\">ID: {pedido._id}</p>\n                <p className=\"nombre\">Cliente: {cliente.nombre} {cliente.apellido} </p>\n\n                <div className=\"articulos-pedido\">\n                    <p className=\"productos\">Artículos Pedido: </p>\n                    <ul>\n                         {\n                            pedido.pedido.map(articulos => (                        \n                            <li key={pedido._id + (articulos.producto !== null ? articulos.producto._id : \"#Error al cargar este dato\")}>\n                                <p>{articulos.producto !== null ? articulos.producto.nombre: \"#Error al cargar este dato\"} </p>\n                                <p>Precio: ${articulos.producto !== null ? articulos.producto.precio : \"#Error al cargar este dato\"} </p>\n                                <p>Cantidad: {articulos.producto !== null ? articulos.cantidad : \"#Error al cargar este dato\"}</p>\n                            </li>))                                                                 \n                        }\n                    </ul>\n                </div>\n\n                <p className=\"total\">Total: ${props.pedido.total} </p>\n                        \n            </div>\n            <div className=\"acciones\">\n                <button type=\"button\" \n                className=\"btn btn-rojo btn-eliminar\"\n                onClick = {()=>eliminarPedido(pedido._id)}\n                \n                >\n                    <i className=\"fas fa-times\"></i>\n                    Eliminar Pedido\n                </button>\n            </div>\n        </li>\n    )\n}\n\nexport default DetallesPedido;","import React, {useEffect, useState, Fragment} from 'react';\nimport clienteAxios from '../../config/axios';\nimport DetallesPedido from './DetallesPedido';\nimport Swal from 'sweetalert2';\nimport Spinner from '../layout/Spinner';\n\nfunction Pedidos() {\n\n    const [pedidos, guardarPedidos] = useState([]);\n    useEffect(() => {\n        const consultarAPI = async () => {\n            // obtener los pedidos\n            const resultado = await clienteAxios.get('/pedidos');\n            guardarPedidos(resultado.data);\n        }\n\n        consultarAPI();\n    }, []);\n\n    const eliminarPedido = id =>{\n        Swal.fire({\n            title: '¿Estás seguro?',\n            text: \"Un pedidos eliminado no se puede recuperar\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, Eliminar',\n            cancelButtonText : 'No, Cancelar'\n        }).then((result) => {\n            if (result.value) {\n              // eliminar en la rest api\n              console.log(pedidos);\n              const todosPedidos = pedidos.filter(pedido => pedido._id !== id );\n              console.log(todosPedidos);\n              clienteAxios.delete(`/pedidos/${id}`)\n              .then(res => {\n                    if(res.status === 200) {\n                        Swal.fire(\n                            'Eliminado',\n                            res.data.mensaje,\n                            'success'\n                        )\n                        guardarPedidos(todosPedidos)\n                    }\n                });\n            }\n        });\n\n    }\n\n    return (\n        <Fragment>\n            <h2>Pedidos</h2>\n\n            <ul className=\"listado-pedidos\">\n            {  !pedidos.length ? <Spinner /> :  pedidos.map(pedido => (\n                        <DetallesPedido \n                        key={pedido._id}\n                        pedido={pedido}\n                        eliminarPedido = {eliminarPedido}                         \n                        />\n                        )    \n                    )\n                }\n            </ul>\n        </Fragment>\n    )\n}\nexport default Pedidos;","import React from 'react';\n\nfunction FormBuscarProducto(props) {\n    return(\n            <form\n                onSubmit={props.buscarProducto}\n            >\n                <legend>Busca un Producto y agrega una cantidad</legend>\n\n                <div className=\"campo\">\n                    <label>Productos:</label>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Nombre Productos\" \n                        name=\"productos\" \n                        onChange={props.leerDatosBusqueda}\n                    />\n                </div>\n\n                <input\n                    type=\"submit\"\n                    className=\"btn btn-azul btn-block\"\n                    value=\"Buscar Producto\"\n                />\n\n            </form>\n    )\n}\nexport default FormBuscarProducto;","import React from 'react';\n\nfunction FormCantidadProducto(props) {\n\n    const {producto, restarProductos, aumentarProductos, eliminarProductoPedido,  index } = props;\n\n    return(\n        <li>\n            <div className=\"texto-producto\">\n                <p className=\"nombre\">{producto.nombre}</p>\n                <p className=\"precio\">$ {producto.precio}</p>\n            </div>\n            <div className=\"acciones\">\n                <div className=\"contenedor-cantidad\">\n                    <i \n                        className=\"fas fa-minus\"\n                        onClick={() => restarProductos(index) }\n                    ></i>\n\n                    <p>{producto.cantidad}</p>\n\n                    <i \n                        className=\"fas fa-plus\"\n                        onClick={() => aumentarProductos(index) }\n                    ></i>\n                </div>\n                <button \n                    type=\"button\" \n                    className=\"btn btn-rojo\"\n                    onClick={() => eliminarProductoPedido(producto._id)}\n                >\n                    <i className=\"fas fa-minus-circle\"></i>\n                        Eliminar Producto\n                </button>\n            </div>\n        </li>\n    )\n}\n\nexport default FormCantidadProducto;","import React, {useState, useEffect, Fragment} from 'react';\nimport clienteAxios from '../../config/axios';\n\nimport FormBuscarProducto from './FormBuscarProducto';\nimport FormCantidadProducto from './FormCantidadProducto';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\n\nfunction NuevoPedido(props) {\n\n    // extraer ID de cliente\n    const { id } = props.match.params;\n\n    // state\n    const [cliente, guardarCliente] = useState({});\n    const [busqueda, guardarBusqueda] = useState('');\n    const [productos, guardarProductos] = useState([]);\n    const [total, guardarTotal] = useState(0);\n\n    useEffect(() => {\n\n        // obtener el cliente\n        const consultarAPI = async () => {\n            // consultar el cliente actual\n            const resultado = await clienteAxios.get(`/clientes/${id}`);\n            guardarCliente(resultado.data);\n        }\n\n        // llamar a la api\n        consultarAPI();\n        \n        // actualizar el total a pagar\n        actualizarTotal();\n\n    }, [productos]);\n\n    const buscarProducto = async e => {\n        e.preventDefault();\n\n        // obtener los productos de la busqueda\n        const resultadoBusqueda = await clienteAxios.post(`/productos/busqueda/${busqueda}`);\n\n        // si no hay resultados una alerta, contrario agregarlo al state\n        if(resultadoBusqueda.data[0]) {\n\n            let productoResultado = resultadoBusqueda.data[0];\n            // agregar la llave \"producto\" (copia de id)\n            productoResultado.producto = resultadoBusqueda.data[0]._id;\n            productoResultado.cantidad = 0;\n\n            // ponerlo en el state\n            guardarProductos([...productos, productoResultado]);\n\n        } else {\n            // no hay resultados\n            Swal.fire({\n                type: 'error',\n                title: 'No Resultados',\n                text: 'No hay resultados'\n            })\n        }\n    }\n\n    // almacenar una busqueda en el state\n    const leerDatosBusqueda = e => {\n        guardarBusqueda( e.target.value );\n    }\n\n    // actualizar la cantidad de productos\n    const restarProductos = i => {\n        // copiar el arreglo original de productos\n        const todosProductos = [...productos];\n\n        // validar si esta en 0 no puede ir mas alla\n        if(todosProductos[i].cantidad === 0) return;\n\n        // decremento\n        todosProductos[i].cantidad--;\n\n        // almacenarlo en el state\n        guardarProductos(todosProductos);\n\n    }\n\n    const aumentarProductos = i => {\n       // copiar el arreglo para no mutar el original\n       const todosProductos = [...productos];\n\n       // incremento\n       todosProductos[i].cantidad++;\n\n       // almacenarlo en el state\n       guardarProductos(todosProductos);\n    }\n\n    // Elimina Un producto del state \n    const eliminarProductoPedido = id => {\n        const todosProductos = productos.filter(producto => producto.producto !== id );\n\n        guardarProductos(todosProductos)\n    }\n\n    // Actualizar el total a pagar\n    const actualizarTotal = () => {\n        // si el arreglo de productos es igual 0: el total es 0\n        if(productos.length === 0) {\n            guardarTotal(0);\n            return;\n        }\n\n        // calcular el nuevo total\n        let nuevoTotal = 0;\n\n        // recorrer todos los productos, sus cantidades y precios\n        productos.map(producto => nuevoTotal += (producto.cantidad * producto.precio)  );\n\n        // almacenar el Total\n        guardarTotal(nuevoTotal);\n    }\n\n    // Almacena el pedido en la BD\n    const realizarPedido = async e => {\n        e.preventDefault();\n\n        // extraer el ID\n        const { id } = props.match.params;\n\n        // construir el objeto\n        const pedido = {\n            \"cliente\" : id, \n            \"pedido\" : productos, \n            \"total\" : total\n        }\n\n        // almacenarlo en la BD\n        const resultado = await clienteAxios.post(`/pedidos/nuevo/${id}`, pedido);\n\n        // leer resultado\n        if(resultado.status === 200) {\n            // alerta de todo bien\n            Swal.fire({\n                type: 'success',\n                title: 'Correcto',\n                text: resultado.data.mensaje\n            })\n        } else {\n            // alerta de error\n            Swal.fire({\n                type: 'error',\n                title: 'Hubo un Error',\n                text: 'Vuelva a intentarlo'\n            })\n        }\n\n        // redireccionar\n        props.history.push('/pedidos');\n\n    }\n\n\n    return(\n        <Fragment>\n            <h2>Nuevo Pedido</h2>\n\n                <div className=\"ficha-cliente\">\n                    <h3>Datos de Cliente</h3>\n                    <p>Nombre: {cliente.nombre} {cliente.apellido}</p>\n                    <p>Teléfono: {cliente.telefono}</p>\n                </div>\n\n                <FormBuscarProducto \n                    buscarProducto={buscarProducto}\n                    leerDatosBusqueda={leerDatosBusqueda}\n                />\n\n                <ul className=\"resumen\">\n                    {productos.map((producto, index) => (\n                        <FormCantidadProducto \n                            key={producto.producto}\n                            producto={producto}\n                            restarProductos={restarProductos}\n                            aumentarProductos={aumentarProductos}\n                            eliminarProductoPedido={eliminarProductoPedido}\n                            index={index}\n                        />\n                    ))}\n\n                </ul>\n\n                \n                <p className=\"total\">Total a Pagar: <span>$ {total}</span> </p>\n\n\n                { total > 0 ? (\n                    <form\n                        onSubmit={realizarPedido}\n                    >\n                        <input type=\"submit\"\n                              className=\"btn btn-verde btn-block\"\n                              value=\"Realizar Pedido\" />\n                    </form>\n                ) : null }\n        </Fragment>\n    )\n}\nexport default  withRouter(NuevoPedido);","import React, {useState, useContext} from 'react';\nimport Swal from 'sweetalert2';\nimport { withRouter } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\n\n// Context\nimport { CRMContext } from '../../context/CRMContext';\n\nfunction Login(props){\n\n    // Auth y token\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n\n    // State con los datos del formulario\n    const [ credenciales, guardarCredenciales] = useState({});\n\n\n    // iniciar sesión en el servidor\n    const iniciarSesion = async e => {\n        e.preventDefault();\n\n        // autenticar al usuario\n\n        try {\n            const respuesta = await clienteAxios.post('/iniciar-sesion', credenciales);\n            \n            // extraer el token y colocarlo en localstorage\n            const { token } = respuesta.data;\n            localStorage.setItem('token', token);\n\n            // colocarlo en el state\n            guardarAuth({\n                token, \n                auth: true\n            })\n\n            // alerta\n            Swal.fire(\n                'Login Correcto',\n                'Has iniciado Sesión',\n                'success'\n            )\n\n            // redireccionar\n            props.history.push('/');\n\n            \n        } catch (error) {\n            //console.log(error);\n            if(error.response){\n                Swal.fire({\n                    type: 'error',\n                    title: 'Hubo un error',\n                    text: error.response.data.mensaje\n                })\n            }else{\n                Swal.fire({\n                    type: 'error',\n                    title: 'Hubo un error',\n                    text: 'Hubo un error'\n                }) \n            }\n           \n        }\n    }\n\n    // almacenar lo que el usuario escribe en el state\n    const leerDatos = e => {\n        guardarCredenciales({\n            ...credenciales,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    return(\n\n        <div className=\"login\">\n            <h2>Iniciar Sesión</h2>\n\n            <div className=\"contenedor-formulario\">\n                <form\n                    onSubmit={iniciarSesion}\n                >\n\n                    <div className=\"campo\">\n                        <label>Email</label>\n                        <input \n                            type=\"text\"\n                            name=\"email\"\n                            placeholder=\"Email para Iniciar Sesión\"\n                            required\n                            onChange={leerDatos}\n                        />\n                    </div>\n\n                    <div className=\"campo\">\n                        <label>Password</label>\n                        <input \n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password para Iniciar Sesión\"\n                            required\n                            onChange={leerDatos}\n                        />\n                    </div>\n\n                    <input type=\"submit\" value=\"Iniciar Sesión\" className=\"btn btn-verde btn-block\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React, {Fragment, useContext} from 'react';\n\n// Routing\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n/*** Layout */\nimport Header from './componentes/layout/Header';\nimport Navegacion from './componentes/layout/Navegacion';\n\n/** Componentes */\nimport Clientes from './componentes/clientes/Clientes';\nimport NuevoCliente from './componentes/clientes/NuevoCliente';\nimport EditarCliente from './componentes/clientes/EditarCliente';\n\nimport Productos from './componentes/productos/Productos';\nimport EditarProducto from './componentes/productos/EditarProducto';\nimport NuevoProducto from './componentes/productos/NuevoProducto';\n\nimport Pedidos from './componentes/pedidos/Pedidos';\nimport NuevoPedido from './componentes/pedidos/NuevoPedido';\n\nimport Login from './componentes/auth/Login';\n\nimport { CRMContext, CRMProvider } from './context/CRMContext';\n\nfunction App() {\n  console.log(process.env.REACT_APP_BACKEND_URL);\n    // utilizar context en el componente\n    const [ auth, guardarAuth ] = useContext(CRMContext);\n\n\n    return (\n      <Router>\n          <Fragment>\n            <CRMProvider value={[ auth, guardarAuth ]}>\n              <Header />\n\n              <div className=\"grid contenedor contenido-principal\">\n                  <Navegacion />\n\n                  <main className=\"caja-contenido col-9\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Clientes} />\n                            <Route exact path=\"/clientes/nuevo\" component={NuevoCliente} />\n                            <Route exact path=\"/clientes/editar/:id\" component={EditarCliente} />\n\n                            <Route exact path=\"/productos\" component={Productos} />\n                            <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n                            <Route exact path=\"/productos/editar/:id\" component={EditarProducto} />\n\n                            <Route exact path=\"/pedidos\" component={Pedidos} />\n                            <Route exact path=\"/pedidos/nuevo/:id\" component={NuevoPedido} />\n\n\n                            <Route exact path=\"/iniciar-sesion\" component={Login} />\n                        </Switch>\n                  </main>\n              </div>\n            </CRMProvider>\n          </Fragment>\n      </Router>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}